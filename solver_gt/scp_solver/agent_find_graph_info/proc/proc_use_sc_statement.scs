scp_program -> proc_use_sc_statement
(*
	-> rrel_params: ...
	(*
		-> rrel_1: rrel_in: _statement;;
		-> rrel_2: rrel_in: _solver_object;;
		-> rrel_3: rrel_in: _init_struct;;
		-> rrel_4: rrel_in: _result_struct;;
	*);;

	-> rrel_operators: ... 
	(*

		-> rrel_init: .proc_use_sc_statement_operator1
		(*
			<- call;;
		    -> rrel_1: rrel_fixed: rrel_scp_const: proc_find_var_in_solver_element;;
		    -> rrel_2: rrel_fixed: rrel_scp_const: ... 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _statement;;
					-> rrel_2: rrel_fixed: rrel_scp_var: _init_struct;;
					-> rrel_3: rrel_fixed: rrel_scp_var: _result_struct;;
					-> rrel_4: rrel_assign: rrel_scp_var: _var_from_solver_element;;
				*);;
		    -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;

			=> nrel_goto: .proc_use_sc_statement_operator2;;
		*);;

		-> .proc_use_sc_statement_operator2
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;

			=> nrel_goto: .proc_use_sc_statement_operator3;;
		*);;

		-> .proc_use_sc_statement_operator3
		(*
			<- ifVarAssign;;
			-> rrel_1: rrel_assign: rrel_scp_var: _var_from_solver_element;;

			=> nrel_then: .proc_use_sc_statement_operator4;;
			=> nrel_else: .proc_use_sc_statement_operator_return;;
		*);;

		-> .proc_use_sc_statement_operator4
		(*
			<- sys_gen;;	
			
			-> rrel_1: rrel_fixed: rrel_scp_var: _init_struct;;
		 	-> rrel_2: rrel_fixed: rrel_scp_const: ...;;
			-> rrel_3: rrel_fixed: rrel_scp_const: ... 
				(* -> ... 
					(* -> rrel_1: rrel_fixed: rrel_scp_var: _var_from_solver_element;;
                       -> rrel_2: rrel_fixed: rrel_scp_var: _solver_object;; 
					*);;
				*);;

			=> nrel_goto: .proc_use_sc_statement_operator_return;;
		*);;
		


		-> .proc_use_sc_statement_operator_return(*<-return;;*);;
	*);;
*);;

